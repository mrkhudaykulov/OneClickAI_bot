from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Text

from ..keyboards import fitness_menu, main_menu, pose_post_actions
from ..states import Fitness
from ..utils import download_best_photo_bytes
from ..services.pose import overlay_pose
from ..services.vision import analyze_calories

router = Router()


@router.message(F.text == "üí™ –§–∏—Ç–Ω–µ—Å-–∫–∞–º–µ—Ä–∞")
async def fitness_entry(message: Message):
    await message.answer("–§–∏—Ç–Ω–µ—Å –±—û–ª–∏–º–∏:", reply_markup=fitness_menu)


@router.message(F.text == "üì∏ –¢–∞–Ω–∞–Ω–∏ –∞–Ω–∞–ª–∏–∑ “õ–∏–ª–∏—à (—Ä–∞—Å–º –æ—Ä“õ–∞–ª–∏)")
async def fitness_pose_request(message: Message, state):
    await state.set_state(Fitness.waiting_pose_image)
    await message.answer("–ò–ª—Ç–∏–º–æ—Å, —Ç–∞–Ω–∞ –ø–æ–∑–∞—Å–∏ –∞–∫—Å —ç—Ç–≥–∞–Ω —Ä–∞—Å–º —é–±–æ—Ä–∏–Ω–≥.")


@router.message(Fitness.waiting_pose_image, F.photo)
async def fitness_pose_handle(message: Message, state):
    image_bytes = await download_best_photo_bytes(message.bot, message)
    out_bytes = overlay_pose(image_bytes)
    await message.answer_photo(photo=out_bytes, caption="–°–∫–µ–ª–µ—Ç —á–∏–∑–∏–ª–¥–∏.", reply_markup=pose_post_actions())
    await state.clear()


@router.message(F.text == "üçõ –¢–∞–æ–º –∫–∞–ª–æ—Ä–∏—è—Å–∏ –≤–∞ –ø–∞—Ä“≥–µ–∑")
async def fitness_food(message: Message, state):
    await message.answer("–ò–ª—Ç–∏–º–æ—Å, –ø–∞—Ä“≥–µ–∑–≥–∞ –¥–æ–∏—Ä —Ç–∞–æ–º —Ä–∞—Å–º–∏–Ω–∏ —é–±–æ—Ä–∏–Ω–≥.")
    await state.set_state(Fitness.waiting_pose_image)  # reuse for photo


@router.message(F.text == "üìè BMI / –≤–∞–∑–Ω / “õ–∞–¥ “≥–∏—Å–æ–±–ª–∞—à")
async def fitness_bmi(message: Message, state):
    await message.answer("“ö–∞–¥-–Ω–∏ “õ–∞–Ω—á–∞? —Å–º –¥–∞ —ë–∑–∏–Ω–≥ (–º–∞—Å–∞–ª–∞–Ω: 175)")
    await state.set_state(Fitness.waiting_bmi_height)


@router.message(Fitness.waiting_bmi_height, F.text.regexp(r"^\d{2,3}$"))
async def fitness_bmi_height(message: Message, state):
    await state.update_data(height_cm=int(message.text))
    await message.answer("–í–∞–∑–Ω–∏–Ω–≥–∏–∑ “õ–∞–Ω—á–∞? –∫–≥ –¥–∞ —ë–∑–∏–Ω–≥ (–º–∞—Å–∞–ª–∞–Ω: 70)")
    await state.set_state(Fitness.waiting_bmi_weight)


@router.message(Fitness.waiting_bmi_weight, F.text.regexp(r"^\d{2,3}$"))
async def fitness_bmi_weight(message: Message, state):
    data = await state.get_data()
    height_cm = data.get("height_cm")
    weight_kg = int(message.text)
    height_m = height_cm / 100.0
    bmi = round(weight_kg / (height_m ** 2), 1)

    category = (
        "–û—Ä—Ç–∏“õ—á–∞ –æ–∑“ì—É–Ω" if bmi < 18.5 else
        "–ù–æ—Ä–º–∞–ª" if bmi < 25 else
        "–û—Ä—Ç–∏“õ—á–∞ –≤–∞–∑–Ω" if bmi < 30 else
        "–°–µ–º–∏–∑–ª–∏–∫"
    )

    await message.answer(f"BMI: <b>{bmi}</b> ‚Äî {category}")
    await state.clear()


@router.message(F.text == "üèÉ –ú–∞—à“õ —Ç–∞–≤—Å–∏—è–ª–∞—Ä–∏")
async def fitness_workout(message: Message, state):
    await message.answer("–ú–∞“õ—Å–∞–¥–∏–Ω–≥–∏–∑? –ú–∞—Å–∞–ª–∞–Ω: –≤–∞–∑–Ω —Ç–∞—à–ª–∞—à, –º—É—à–∞–∫ —á–∏“õ–∞—Ä–∏—à, —á–∏–Ω–∏“õ–∏—à")
    await state.set_state(Fitness.waiting_workout_prefs)


@router.message(Fitness.waiting_workout_prefs)
async def fitness_workout_prefs(message: Message, state):
    goal = message.text or ""
    # Simple templated suggestion (no network call)
    reply = (
        f"–ú–∞“õ—Å–∞–¥: {goal}\n"
        "“≤–∞—Ñ—Ç–∞—Å–∏–≥–∞ 3-4 –∫—É–Ω. –ö–æ–º–ø–ª–µ–∫—Å –º–∞—à“õ–ª–∞—Ä: squats, push-ups, rows, planks.\n"
        "–ö–∞—Ä–¥–∏–æ: 20-30 –¥–∞“õ–∏“õ–∞ ‚Äì yugurish/velo.\n"
        "“ö—É–≤–≤–∞—Ç –º–∞—à“õ–ª–∞—Ä–∏–¥–∞ progressive overload. –£–π“õ—É 7-8 —Å–æ–∞—Ç."
    )
    await message.answer(reply)
    await state.clear()


@router.message(F.text == "üìÖ –§–∏—Ç–Ω–µ—Å-—Ä–µ–∂–∞ —Ç—É–∑–∏—à")
async def fitness_plan(message: Message, state):
    await message.answer("“ö–∞–Ω—á–∞ –∫—É–Ω–ª–∏–∫ –≤–∞ “õ–∞–π—Å–∏ —É—Å–∫—É–Ω–∞–ª–∞—Ä –±–æ—Ä? –ú–∞—Å–∞–ª–∞–Ω: 4 –∫—É–Ω, –∑–∞–ª")
    await state.set_state(Fitness.waiting_plan_details)


@router.message(Fitness.waiting_plan_details)
async def fitness_plan_details(message: Message, state):
    details = message.text or ""
    plan = (
        "1-–∫—É–Ω: Ko'krak + Triceps, 2-–∫—É–Ω: Orqa + Biceps, 3-–∫—É–Ω: Dam, 4-–∫—É–Ω: Oyoq + Yelka.\n"
        "Har mashq 3-4 set, 8-12 takror. Yakunda 15-20 daqiqa kardio."
    )
    await message.answer(f"–°–∏–∑–Ω–∏–Ω–≥ –∫–∏—Ä–∏—Ç–≥–∞–Ω–∏–Ω–≥–∏–∑: {details}\n\n–¢–∞–∫–ª–∏—Ñ —ç—Ç–∏–ª–≥–∞–Ω —Ä–µ–∂–∞:\n{plan}")
    await state.clear()


@router.message(F.text == "üîô –û—Ä“õ–∞–≥–∞")
async def back_to_main(message: Message, state):
    await state.clear()
    await message.answer("–ê—Å–æ—Å–∏–π –º–µ–Ω—é:", reply_markup=main_menu)


@router.callback_query(Text("pose_again"))
async def pose_again(cb: CallbackQuery, state):
    await cb.answer()
    await state.set_state(Fitness.waiting_pose_image)
    await cb.message.answer("–Ø–Ω–∞ —Ä–∞—Å–º —é–±–æ—Ä–∏–Ω–≥.")


@router.callback_query(Text("back_fitness_menu"))
async def back_fitness_menu(cb: CallbackQuery, state):
    await cb.answer()
    await state.clear()
    await cb.message.answer("–§–∏—Ç–Ω–µ—Å –±—û–ª–∏–º–∏:", reply_markup=fitness_menu)
